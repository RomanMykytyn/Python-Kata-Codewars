A famous casino is suddenly faced with a sharp decline of their revenues. They decide to offer Texas hold'em also online. Can you help them by writing an algorithm that can rank poker hands?

Task
Create a poker hand that has a method to compare itself to another poker hand:

compare_with(self, other_hand)
A poker hand has a constructor that accepts a string containing 5 cards:

PokerHand("KS 2H 5C JD TD")
The characteristics of the string of cards are:

Each card consists of two characters, where
The first character is the value of the card: 2, 3, 4, 5, 6, 7, 8, 9, T(en), J(ack), Q(ueen), K(ing), A(ce)
The second character represents the suit: S(pades), H(earts), D(iamonds), C(lubs)
A space is used as card separator between cards
The result of your poker hand compare can be one of these 3 options:

[ "Win", "Tie", "Loss" ]
Notes
Apply the Texas Hold'em rules for ranking the cards.
Low aces are NOT valid in this kata.
There is no ranking for the suits.

class PokerHand(object):

    def __init__(self, hand):
        self.hand = hand
        
    def compare_with(self, other):
        deka = [ '2','3','4','5','6','7','8','9','T','J','Q','K','A' ]
        hands, finish = [ self.hand.split(), other.hand.split() ], []
        for i in hands:
            kiker, combi, pair, triple, strit, kare = [], [], 0, 0, 0, 0
            hand = [ j[0] for j in i ]
            hand_mast = [ k[1] for k in i ]
            for idx, card in enumerate(deka):
                if hand.count(card) == 0:
                    strit = 0
                if hand.count(card) == 1:
                    kiker.append(idx)
                    strit += 1
                if hand.count(card) == 2:
                    if triple > 0:
                        combi.insert(0, idx)
                        pair += 1
                    else:
                        combi.append(idx)
                        pair += 1
                if hand.count(card) == 3:
                    combi.append(idx)
                    triple += 1
                if hand.count(card) == 4:
                    combi.append(idx)
                    kare += 1
                if strit == 5 or hand == [ 'A','2','3','4','5' ]:
                    if hand_mast.count(hand_mast[0]) == 5:
                        combi.append(90)
                    else:
                        combi.append(50)
            if pair == 1 and triple == 0:
                combi.append(20)
            if pair == 2:
                combi.append(30)
            if triple == 1 and pair == 0:
                combi.append(40)
            if hand_mast.count(hand_mast[0]) == 5 and combi == []:
                combi.append(60)
            if pair == 1 and triple == 1:
                combi.append(70)
            if kare == 1:
                combi.append(80)
            finish.append(kiker + combi)
        for n in range( 1, len(finish[0])+1 ):
            if finish[0][-n] > finish[1][-n]:
                return 'Win'
            if finish[0][-n] < finish[1][-n]:
                return 'Loss'
        return 'Tie'
